kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.2.0/aio/deploy/recommended.yaml
kubectl proxy
http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/
config file

kubectl exec -it <POD> -- /bin/bash
*apt update
*apt upgrade
apt add curl or apt install curl


kubectl port-forward <POD> 5000:5000 &
kubectl exec flask-app-deployment-566fd4676c-87jx7 -- ls -lA /etc/downward
kubectl exec flask-app-deployment-566fd4676c-87jx7 -- cat /etc/downward/annotations


helm install flask-app-api --values values.yaml -n default --debug --dry-run .
helm install flask-app-api --values values.yaml -n default .

# ToDo: make MAKE command to set up cluster through glcoud
gcloud container clusters create flask-app-cluster \
    --num-nodes=2 \
    --project=flask-app-310119 \
    --zone=us-central1-c \
    --machine-type e2-medium \
    --enable-stackdriver-kubernetes

gcloud container clusters delete <cluster_name>
gcloud container clusters describe mycluster --format='get(endpoint)'


Create secret for https traffic

$ openssl genrsa -out https.key 2048
$ openssl req -new -x509 -key https.key -out https.cert -days 3650 -subj /CN=demo.example.com
$ echo bar > foo

Now you can use kubectl create secret to create a Secret from the three files:
$ kubectl create secret generic fortune-https --from-file=https.key --from-file=https.cert --from-file=foo

kubectl exec fortune-https -c web-server -- mount | grep certs


Pull image from docker from private repository
$ kubectl create secret docker-registry mydockerhubsecret \
    --docker-username=myusername \
    --docker-password=mypassword \
    --docker-email=my.email@provider.com


$ kubectl create secret generic flaskappdockerhubsecret \
--from-file=.dockerconfigjson=/Users/matt.crook/.docker/config.json \
--type=kubernetes.io/dockerconfigjson


$ kubectl create secret docker-registry myregistrykey \
    --docker-server=DUMMY_SERVER \
    --docker-username=DUMMY_USERNAME --docker-password=DUMMY_DOCKER_PASSWORD \
    --docker-email=DUMMY_DOCKER_EMAIL
