apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app-deployment
spec:
  selector:
    matchLabels:
      app: flask-app
  replicas: 2
  # minReadySeconds: 2
  strategy:
    rollingUpdate:
      # how many pods are replaced at once during the deployments rolling update.
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      name: flask-app-api-pod
      labels:
        app: flask-app
    spec:
      imagePullSecrets:
      - name: flaskappdockerhubsecret
      containers:
      - image: mgcrook11/flask-app-api:1.6
        name: flask-app-api
        imagePullPolicy: IfNotPresent
        # command: ["/bin/sh","-c"]
        resources:
          limits:
            cpu: 128m
            memory: 500Mi
          requests:
            cpu: 128m
            memory: 500Mi
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        volumeMounts:
          - name: downward
            mountPath: /etc/downward
            readOnly: false
          # - name: certs
          #   mountPath: /etc/certs/
          #   readOnly: true
        ports:
          - containerPort: 5000
            protocol: TCP
        readinessProbe:
          # readiness probe will be executed every 5 seconds.
          periodSeconds: 6
          # An initial delay to start probe to ensure app is booted up
          initialDelaySeconds: 15
          # The probe must return a response within this time frame
          timeoutSeconds: 3
          httpGet:
            path: /ready
            port: 5000
        livenessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 20
          timeoutSeconds: 3
      # - image: nginx
      #   name: nginx
      #   resources:
      #     limits:
      #       cpu: 128m
      #       memory: 500Mi
      #     requests:
      #       cpu: 128m
      #       memory: 500Mi
      #   volumeMounts:
      #     - mountPath: /usr/share/nginx/html
      #       name: downward
      #       readOnly: true
      #   ports:
      #     - containerPort: 80
      #       protocol: TCP
      volumes:
      - name: downward
        downwardAPI:
          items:
          - path: "podName"
            fieldRef:
              fieldPath: metadata.name
          - path: "podNamespace"
            fieldRef:
              fieldPath: metadata.namespace
          - path: "labels"
            fieldRef:
              fieldPath: metadata.labels
          - path: "annotations"
            fieldRef:
              fieldPath: metadata.annotations
          - path: "containerCpuRequestMilliCores"
            resourceFieldRef:
              # Container name must be specified when exposing container level metadata such as resource limit or requests like this using resourceFieldRef.
              containerName: flask-app-api
              resource: requests.cpu
              divisor: 1m
          - path: "containerMemoryLimitBytes"
            resourceFieldRef:
              containerName: flask-app-api
              resource: limits.memory
              divisor: "1"
      # - name: certs
      #   secret:
      #     secretName: https
